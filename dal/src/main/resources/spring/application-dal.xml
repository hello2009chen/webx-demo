<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context
       					http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/tx
           				http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			            http://www.springframework.org/schema/aop
			            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    <context:property-placeholder location="classpath:properties/dal.properties"></context:property-placeholder>

    <!-- other -->
    <context:annotation-config />
    <!-- 定义扫描根路径为cn.fraudmetrix.demo，不使用默认的扫描方式 -->
    <context:component-scan base-package="com.wellong" use-default-filters="false">
        <!-- 扫描符合@Service @Repository的类 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>


    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value = "${database.mysql.driver}"></property>
        <property name="url" value = "${database.mysql.url}"></property>
        <property name="username" value = "${database.mysql.username}"></property>
        <property name="password" value = "${database.mysql.password}"></property>
        <property name="defaultAutoCommit" value = "false"></property>

        <property name="initialSize" value = "${database.mysql.initialSize}"></property>
        <property name="minIdle" value = "1"></property>
        <property name="maxActive" value = "${database.mysql.maxActive}"></property>

        <property name="maxWait" value = "60000"></property>
    </bean>

    <bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/sqlmap-config.xml"></property>
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"></property>
        <property name="typeAliasesPackage" value="com.wellong.model"></property>
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id = "transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wellong.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 事务属性，方法以此开头的需要进行事务控制 -->
    <bean id="txAttributeSource" class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
        <property name="properties">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED,-RollbackableException</prop>
                <prop key="update*">PROPAGATION_REQUIRED,-RollbackableException</prop>
                <prop key="delete*">PROPAGATION_REQUIRED,-RollbackableException</prop>
            </props>
        </property>
    </bean>

    <!-- 事务拦截器 -->
    <bean id="demoTxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributeSource" ref="txAttributeSource" />
    </bean>

</beans>